version: '3.8'

services:
  # Neo4j Database
  neo4j:
    image: neo4j:5.11
    container_name: niazi-neo4j
    ports:
      - "7474:7474"
      - "7687:7687"
    environment:
      NEO4J_AUTH: neo4j/password
      NEO4J_PLUGINS: '["apoc"]'
      NEO4J_dbms_security_procedures_unrestricted: "gds.*,apoc.*"
      NEO4J_dbms_security_procedures_allowlist: "gds.*,apoc.*"
    volumes:
      - neo4j_data:/data
      - neo4j_logs:/logs
      - neo4j_import:/var/lib/neo4j/import
      - neo4j_plugins:/plugins
    networks:
      - niazi-network

  # Redis Cache
  redis:
    image: redis:7-alpine
    container_name: niazi-redis
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    networks:
      - niazi-network

  # MySQL (for user data and metadata)
  mysql:
    image: mysql:8.0
    container_name: niazi-mysql
    ports:
      - "3306:3306"
    environment:
      MYSQL_DATABASE: niazi_tribe
      MYSQL_ROOT_PASSWORD: root_password
      MYSQL_USER: niazi_user
      MYSQL_PASSWORD: niazi_password
    volumes:
      - mysql_data:/var/lib/mysql
    networks:
      - niazi-network

  # MinIO S3-compatible storage
  minio:
    image: minio/minio:latest
    container_name: niazi-minio
    ports:
      - "9000:9000"
      - "9001:9001"
    environment:
      MINIO_ROOT_USER: minioadmin
      MINIO_ROOT_PASSWORD: minioadmin123
    command: server /data --console-address ":9001"
    volumes:
      - minio_data:/data
    networks:
      - niazi-network

  # RabbitMQ for message queuing
  rabbitmq:
    image: rabbitmq:3-management-alpine
    container_name: niazi-rabbitmq
    ports:
      - "5672:5672"
      - "15672:15672"
    environment:
      RABBITMQ_DEFAULT_USER: niazi
      RABBITMQ_DEFAULT_PASS: niazi_password
    volumes:
      - rabbitmq_data:/var/lib/rabbitmq
    networks:
      - niazi-network

  # API Service
  api:
    build:
      context: ./apps/api
      dockerfile: Dockerfile
    container_name: niazi-api
    ports:
      - "4000:4000"
    environment:
      NODE_ENV: development
      PORT: 4000
      NEO4J_URI: bolt://neo4j:7687
      NEO4J_USERNAME: neo4j
      NEO4J_PASSWORD: password
      REDIS_URL: redis://redis:6379
      MYSQL_HOST: mysql
      MYSQL_PORT: 3306
      MYSQL_DATABASE: niazi_tribe
      MYSQL_USER: niazi_user
      MYSQL_PASSWORD: niazi_password
      AWS_ENDPOINT: http://minio:9000
      AWS_ACCESS_KEY_ID: minioadmin
      AWS_SECRET_ACCESS_KEY: minioadmin123
      S3_BUCKET_NAME: niazi-media
      RABBITMQ_URL: amqp://niazi:niazi_password@rabbitmq:5672
    volumes:
      - ./apps/api:/app
      - /app/node_modules
    depends_on:
      - neo4j
      - redis
      - mysql
      - minio
      - rabbitmq
    networks:
      - niazi-network
    restart: unless-stopped

  # UI Service
  ui:
    build:
      context: ./apps/ui
      dockerfile: Dockerfile
    container_name: niazi-ui
    ports:
      - "3000:3000"
    environment:
      NEXT_PUBLIC_API_URL: http://localhost:4000
    volumes:
      - ./apps/ui:/app
      - /app/node_modules
      - /app/.next
    depends_on:
      - api
    networks:
      - niazi-network
    restart: unless-stopped

  # Matching Service
  matching-service:
    build:
      context: ./services/matching
      dockerfile: Dockerfile
    container_name: niazi-matching
    environment:
      NODE_ENV: development
      REDIS_URL: redis://redis:6379
      NEO4J_URI: bolt://neo4j:7687
      NEO4J_USERNAME: neo4j
      NEO4J_PASSWORD: password
      RABBITMQ_URL: amqp://niazi:niazi_password@rabbitmq:5672
    volumes:
      - ./services/matching:/app
      - /app/node_modules
    depends_on:
      - neo4j
      - redis
      - rabbitmq
    networks:
      - niazi-network
    restart: unless-stopped

  # GEDCOM Service
  gedcom-service:
    build:
      context: ./services/gedcom
      dockerfile: Dockerfile
    container_name: niazi-gedcom
    ports:
      - "5000:5000"
    environment:
      NODE_ENV: development
      PORT: 5000
      REDIS_URL: redis://redis:6379
      NEO4J_URI: bolt://neo4j:7687
      NEO4J_USERNAME: neo4j
      NEO4J_PASSWORD: password
      RABBITMQ_URL: amqp://niazi:niazi_password@rabbitmq:5672
    volumes:
      - ./services/gedcom:/app
      - /app/node_modules
    depends_on:
      - neo4j
      - redis
      - rabbitmq
    networks:
      - niazi-network
    restart: unless-stopped

volumes:
  neo4j_data:
  neo4j_logs:
  neo4j_import:
  neo4j_plugins:
  redis_data:
  mysql_data:
  minio_data:
  rabbitmq_data:

networks:
  niazi-network:
    driver: bridge 